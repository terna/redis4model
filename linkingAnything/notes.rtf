{\rtf1\ansi\ansicpg1252\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;\f1\fnil\fcharset0 Calibri;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;\red79\green129\blue189;\red0\green0\blue255;}
\paperw11900\paperh16840\margl1440\margr1440\vieww12280\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\ri-6\sl276\slmult1\sb277\sa277

\f0\b\fs26 \cf2 MSS&MI (Memory Sharing System and Model Integration)\
\pard\pardeftab720\ri-6\sl276\slmult1\qj

\f1\b0 \cf0 The tool MSS&MI (Memory Sharing System and Model Integration) provides the integration of the different codes, allowing to keep safe their integrity and their capability of running alone.\
The memory sharing, necessary for the interaction, is assured by the 
\i Redis
\i0  tool ( {\field{\*\fldinst{HYPERLINK "http://redis.io"}}{\fldrslt \cf3 \ul \ulc3 http://redis.io}} ). It is an open source highly renowned memory system, having clients for a large set of languages (\'a0{\field{\*\fldinst{HYPERLINK "http://redis.io/clients"}}{\fldrslt \cf3 \ul \ulc3 http://redis.io/clients}}\'a0); in our case the interest is for 
\i C++
\i0 , Python and 
\i R
\i0 .\

\i NetLogo
\i0 , very significant for simulation agent-based models and used in the above-examined programs, is missing in that list. Anyhow, 
\i NetLogo
\i0  easily works with 
\i R
\i0 , via 
\i Rserve
\i0  (\'a0{\field{\*\fldinst{HYPERLINK "http://rserve-ext.sourceforge.net"}}{\fldrslt \cf3 \ul \ulc3 http://rserve-ext.sourceforge.net}}\'a0) and via 
\i R
\i0  it interacts with 
\i Redis
\i0  (
\i rredis
\i0  package at {\field{\*\fldinst{HYPERLINK "https://cran.r-project.org/web/packages/rredis/index.html"}}{\fldrslt \cf3 \ul \ulc3 https://cran.r-project.org/web/packages/rredis/index.html}}\'a0).\
We also have to implement communication 
\i channels
\i0  among the different running code. We create the channels via 
\i Redis
\i0  or 
\i rredis
\i0 , to have a stable environment working in 
\i Linux
\i0 , 
\i MacOS
\i0  and 
\i Windows
\i0  (coping with all the constraints and limitations, mainly coming from 
\i Windows
\i0 ).  Channels are used to send wait and continuations orders among all the different programs, to have both sequential and parallel executions.\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\f2\fs24 \cf0 \
\
\
https://cran.r-project.org/web/packages/rredis/vignettes/rredis.pdf\
for explanations on the the rredis package\
\
_________________\
\
constraints:\
\
-\
\
in Windows Rserve uses a unique environment; can be a trick to exchange variables, but sometimes multiple connections are locked\
\
-\
\
Client to Redis for NetLogo NetLogo is lacking, we use a bridge via R and rides\
\
-\
\
 if a subscription is running (in any channel) via rredis, it is not possible to publish on a channel; the R environment is unique in Windows, so if a peer subscribes, the other ones cannot publish\
\
_________________\
\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 1 exampleWithRedis_OnlyPython
\b0 \
\
it works in MacOS (heavy CPU charge)\
it works quite slowly in Windows (test in W10 and 7w, due to the too strict loop of CPU use in while cycles\
\
\

\b 2 exampleWithRedis_OnlyPython_sleep
\b0 \
\
it works very quickly in MacOS (light CPU charge)\
and in Windows (test in W10 or W7), too\
\
\

\b 3 exampleWithRedis_OnlyPython_channelMasterSlave(s)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
you can run more slaves in parallel from different terminals\
\
it works perfectly in MacOS \
and in Windows (test in W8)\
\
if you start a slave not allowing it to listen. the message from the master are piled in the channel; missing the slave/s, sent messages are lost (the master knows how many slave(s) are listening\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 4 exampleWithRedis_OnlyPython_channelPeers\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
it works very well in MacOS and Windows (test in W8)\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 5 exampleOnlyPython_viaRserveRedis\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 it works perfectly in MacOS (if you start the master without a listening slave, the messages are lost\
you can run several slaves simultaneously listening)\
\
but in Windows (test in W7) does not work because the R client is unique and cannot publish in a subscribed channel (this is a rredis problem, not a Redis one)\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 6 exampleWithRedisR_OnlyPython_channelPeers\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
it works perfectly in MacOS\
\
not verified in Windows, jumping directly to 6b, which is a superset of this example\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 6b exampleWithRedisR_OnlyPython_
\i channel
\i0 Peers
\i WithVars
\i0\b0 \
\
it works perfectly in MacOS\
\
in Windows (test in W7) it gets stuck, the environment is unique, so publishing in a subscribed status is not possible\
\
\

\b 7 mixingRedisRonChannels_RonVariables_onlyPython
\b0 \
\
\
it works perfectly in MacOS, with all data moving via get/set variables via Rserve to redit to cope with serialization\
\
in Windows (test in W7)  does not work: multiple connection to Rserve can be mutually locking themselves\
\
\

\b 8 mixingRedisROnChannels_RedisOnVariablesWithOneRUsing_charToRaw_onlyPython\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
it works perfectly in MacOS\
in Windows (test in W7) too, it works perfectly\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 8b mixingRedisR_onChannels_onVariables_onlyPython(statsInR)
\b0 \
\
added a set of final calculation using R, via peer3 which is interconnected to R\
it works both MacOS and in Windows (test in W7)\
\
\

\b 9 mixingRedisR_onChannels_onVariables_onlyPython(statsInR)_alsoRunningAlone\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
introducing the possibility of having each peer running alone (if the number of the used channels is 0)\
\
it works in MacOS and in Windows (test in W7)\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 9b mixingRedisR_onChannels_onVariables_onlyPython(statsInR)_alsoRunningAlone\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 to fix a problem (noticed n W8 and W10) when redisGet() of R, instead of a simple value, returns a list (the value enclosed in square brackets) followed by a series of other information\
\
it works in MacOS and in Windows 7, 8, 10\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 10  mixingRedisR_onChannels_onVariables_PythonNetLogo(statsInR)_alsoRunningAlone\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 peer3 is now a NetLogo program interacting both with R and Redis via R\
\
it works in MacOS and in Windows 7, 8 and 10
\b \

\b0 \
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b \cf0 \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardeftab720\pardirnatural

\b0 \cf0 \
\
}